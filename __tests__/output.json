{
  "stats": {
    "suites": 10,
    "tests": 25,
    "passes": 8,
    "pending": 17,
    "failures": 0,
    "testsRegistered": 25,
    "passPercent": 32,
    "pendingPercent": 68,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-03-30T21:58:49.002Z",
    "end": "2023-03-30T22:02:11.438Z",
    "duration": 202436
  },
  "results": [
    {
      "uuid": "ae968225-81c0-4ac1-85ea-07c2195516da",
      "title": "",
      "fullFile": "cypress/e2e/e2e/plugin_test/visualizer_spec.js",
      "file": "cypress/e2e/e2e/plugin_test/visualizer_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c35d8df0-da35-4a88-9bec-25b09c70da28",
          "title": "Visualizer Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visit MeshMap Visualizer, check gql status",
              "fullTitle": "Visualizer Spec Visit MeshMap Visualizer, check gql status",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.setMode(_constants.VISUALIZER);\ncy.visit(\"/extension/meshmap\");\ncy.intercept(\"/api/provider/extension*\").as(\"extensionFileLoad\");\ncy.wait(\"@extensionFileLoad\");\ncy.get(\"body\").then(body => {\n  if (body.find('[data-cy=\"modal-close-btn\"]').length > 0) {\n    cy.get('[data-cy=\"modal-close-btn\"]').click();\n  }\n});\ncy.contains(\"MeshMap\");\ncy.wait(1500);\ncy.get(\"body\").then(body => {\n  if (body.find(`[data-cy=\"modal-close-btn\"]`).length > 0) {\n    // ensures the message of graphQL error, if any\n    cy.get('[data-cy=\"modal-close-btn\"]').click();\n  }\n}); //tabs\ncy.contains(\"Details\");\ncy.contains(\"Metrics\");\ncy.contains(\"Actions\");\ncy.get(\"body\").should(\"not.contain\", \"Uh-oh!\");",
              "err": {},
              "uuid": "4a91fdb3-7be7-47d5-91a5-9cf94b45c654",
              "parentUUID": "c35d8df0-da35-4a88-9bec-25b09c70da28",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "4a91fdb3-7be7-47d5-91a5-9cf94b45c654"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d6c53e61-bafc-4021-940f-b2096994bf48",
      "title": "",
      "fullFile": "cypress/e2e/e2e/application_spec.js",
      "file": "cypress/e2e/e2e/application_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0aff91b9-204a-47b2-8315-1ff35d679087",
          "title": "Application Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Render MeshMap Application",
              "fullTitle": "Application Spec Render MeshMap Application",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains(\"Applications\");\ncy.get(\"#MUIDataTableBodyRow-applications-0\").click({\n  force: true\n}); //convention: MUIDataTableBodyRow + type  + rowIndex\ncy.wait(2000);\ncy.get(\"body\").then(body => {\n  if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n    cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"not.contain\", \"Error\");\n  }\n});",
              "err": {},
              "uuid": "d4369cca-987b-4aa3-8f2f-f9b2a0b17f28",
              "parentUUID": "0aff91b9-204a-47b2-8315-1ff35d679087",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Rename and Saving Application",
              "fullTitle": "Application Spec Rename and Saving Application",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// renaming application is skipped until the import test is present, because it may change the users app name\ncy.get(\"#MUIDataTableBodyRow-applications-0\", {\n  timeout: 30000\n}).should(\"be.visible\").click(); // drop the first application\ncy.wait(3000); // let it be dropped on the canvas\ncy.get(\"#design-name-textfield\").type(bookInfoUrlUploadedName);\ncy.intercept('/api/application*').as('applicationSave'); // TODO - Saving Application request intercept need to be fixed.\ncy.wait(\"@applicationSave\").then(() => {\n  // move to drawer and check for update\n  cy.get(\"[data-cy='application-drawer']\").click();\n  cy.wait(5000); // wait for seconds, because the subscritions cannot be tracked for now\n  cy.get(\"#MUIDataTableBodyRow-applications-0 p\").contains(bookInfoUrlUploadedName);\n});",
              "err": {},
              "uuid": "118ac20f-f425-4137-8d04-9e96d296a15f",
              "parentUUID": "0aff91b9-204a-47b2-8315-1ff35d679087",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Validate an application",
              "fullTitle": "Application Spec Validate an application",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[data-cy='application-drawer']\").click();\ncy.get(\"#MUIDataTableBodyRow-applications-0\", {\n  timeout: 30000\n});\ncy.wait(1500);\ncy.get(\"#MUIDataTableBodyRow-applications-0\").click();\ncy.wait(2000);\ncy.get(\"#verify-design-btn\").click();\ncy.get('[data-cy=\"validate-btn-modal\"]').click();\ncy.contains(\"OK\");",
              "err": {},
              "uuid": "0f2eaf39-3c65-4acc-96db-f1762c7e6683",
              "parentUUID": "0aff91b9-204a-47b2-8315-1ff35d679087",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Deploy and Undeploy an Application",
              "fullTitle": "Application Spec Deploy and Undeploy an Application",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-test-id=\"Search\"]').type(bookInfoApp);\ncy.intercept(\"/api/application*\").as(\"applicationPost\");\ncy.wait(\"@applicationPost\");\ncy.wait(1500);\ncy.get(\"#MUIDataTableBodyRow-applications-0\").should(\"be.visible\").contains(bookInfoApp).click();\ncy.wait(2000);\ncy.get(\"body\").then(body => {\n  if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n    cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"not.contain\", \"Unable to render\");\n  }\n});\ncy.get(\"#deploy-design-btn\").click();\ncy.get('[data-cy=\"deploy-btn-modal\"]').click(); // modal opens\ncy.intercept(\"/api/pattern/deploy*\").as(\"applicationDeploy\");\ncy.get('[data-cy=\"deploy-btn-confirm\"]').click();\ncy.wait(\"@applicationDeploy\").then(() => {\n  // cy.get(\"[data-cy='progress-snackbar']\").contains(`Deploying application: ${bookInfoApp}`);\n  cy.get(\"body\").then(body => {\n    if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n      cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"not.contain\", \"Failed\");\n    }\n  });\n}); //Undeploy \ncy.get('#undeploy-design-btn').click();\ncy.get('[data-cy=\"Undeploy-btn-modal\"]').click(); // modal opens\ncy.intercept(\"/api/pattern/deploy*\").as(\"applicationUndeploy\");\ncy.get('[data-cy=\"deploy-btn-confirm\"]').click(); // cy.get(\"[data-cy='progress-snackbar']\").contains(`Undeploying application: ${bookInfoApp}`);\ncy.wait(\"@applicationUndeploy\").then(() => {\n  cy.get(\"body\").then(body => {\n    if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n      cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"not.contain\", \"Failed\");\n    }\n  });\n});",
              "err": {},
              "uuid": "458ef69c-195b-4a02-babb-23b98012762d",
              "parentUUID": "0aff91b9-204a-47b2-8315-1ff35d679087",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Search an Application",
              "fullTitle": "Application Spec Search an Application",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(\"/api/application*\").as(\"applicationSearch\");\ncy.get('[data-test-id=\"Search\"]').type(bookInfoApp);\ncy.wait(\"@applicationSearch\");\ncy.get(\"#MUIDataTableBodyRow-applications-0\").should(\"be.visible\").contains(bookInfoApp);",
              "err": {},
              "uuid": "3ab7af77-7cd6-4a3b-95d8-06a1b00b2102",
              "parentUUID": "0aff91b9-204a-47b2-8315-1ff35d679087",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "d4369cca-987b-4aa3-8f2f-f9b2a0b17f28",
            "118ac20f-f425-4137-8d04-9e96d296a15f",
            "0f2eaf39-3c65-4acc-96db-f1762c7e6683",
            "458ef69c-195b-4a02-babb-23b98012762d",
            "3ab7af77-7cd6-4a3b-95d8-06a1b00b2102"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7451893a-048d-40e3-88e3-b787fcc1f7a3",
      "title": "",
      "fullFile": "cypress/e2e/e2e/component_generation_spec.js",
      "file": "cypress/e2e/e2e/component_generation_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec4ee937-d51a-4cb3-a805-4c924512b6be",
          "title": "Component Generation Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check if service account component is generated or not",
              "fullTitle": "Component Generation Spec Check if service account component is generated or not",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-cy=\"component-drawer\"]').click();\ncy.get('[data-cy=\"component-search\"]').clear().type(\"Service Account\"); // no assertions?\ncy.screenshot(); // atleast take a screenshot to record if the component is avaiable",
              "err": {},
              "uuid": "007cd5c1-4c80-4c7a-b89b-c5f0a0016368",
              "parentUUID": "ec4ee937-d51a-4cb3-a805-4c924512b6be",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "007cd5c1-4c80-4c7a-b89b-c5f0a0016368"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5071a8b6-d8b9-474d-bb4f-cb91cdc1b293",
      "title": "",
      "fullFile": "cypress/e2e/e2e/component_spec.js",
      "file": "cypress/e2e/e2e/component_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f522feea-90fb-4d6d-ae48-a58006948c2e",
          "title": "Component Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Drag All Visible component on canvas",
              "fullTitle": "Component Spec Drag All Visible component on canvas",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// halted until fix for pointer-up error in ci environment\ncy.get(\".component-drawer-svg-container[draggable='true']\").each(ele => {\n  const elem = cy.get(ele);\n  elem.click();\n  elem.drag(\"#cy-canvas-container\", {\n    force: true\n  });\n  cy.get(\"#component-delete\", {\n    timeout: 3000\n  }).click();\n  cy.wait(100);\n});",
              "err": {},
              "uuid": "e12f18bb-4353-47ef-94e2-9e9835e11af0",
              "parentUUID": "f522feea-90fb-4d6d-ae48-a58006948c2e",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "e12f18bb-4353-47ef-94e2-9e9835e11af0"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "233eb068-0040-4060-a1d3-fa22fa483bc4",
      "title": "",
      "fullFile": "cypress/e2e/e2e/design_spec.js",
      "file": "cypress/e2e/e2e/design_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "61266df9-a58e-42e7-a051-ec16eaa8d205",
          "title": "Designer Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Load MeshMap Design with a click",
              "fullTitle": "Designer Spec Load MeshMap Design with a click",
              "timedOut": null,
              "duration": 8426,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[data-cy='design-drawer']\").click();\ncy.get(\"#MUIDataTableBodyRow-patterns-0\", {\n  timeout: 30000\n});\ncy.wait(2000);\ncy.intercept(\"/api/pattern*\").as(\"patternLoad\");\ncy.get(\"#MUIDataTableBodyRow-patterns-0\").click(); //convention: MUIDataTableBodyRow + type  + rowIndex\ncy.wait(\"@patternLoad\"); // cy.get(\"[data-cy='progress-snackbar']\").contains(\"Rendering your MeshMap...\");\ncy.wait(2000);\ncy.get(\"body\").then(body => {\n  if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n    cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"not.contain\", \"Unable to render\");\n  }\n});",
              "err": {},
              "uuid": "2b02ef6e-78bd-4609-9eab-07774c5759f3",
              "parentUUID": "61266df9-a58e-42e7-a051-ec16eaa8d205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Rename Design",
              "fullTitle": "Designer Spec Rename Design",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#component-drawer-Application\").should('be.visible').drag(\"#cy-canvas-container\", {\n  force: true\n});\ncy.wait(2000); // let it open the rjsf successfully\ncy.get(\"[data-cy='design-drawer']\").click(); // to close the rjsf form by click event\ncy.intercept('/api/pattern').as('patternSave');\ncy.get(\"#design-name-textfield\").focus().clear().type(cypressModifiedDesignName);\ncy.wait(\"@patternSave\").then(() => {\n  // move to drawer and check for update\n  cy.get(\"[data-cy='design-drawer']\").click();\n  cy.get(\"#MUIDataTableBodyRow-patterns-0 p\", {\n    timeout: 30000\n  });\n  cy.wait(2500);\n  cy.get(\"#MUIDataTableBodyRow-patterns-0 p\").contains(cypressModifiedDesignName);\n});",
              "err": {},
              "uuid": "b922f776-e136-424c-af59-fadbda1a4431",
              "parentUUID": "61266df9-a58e-42e7-a051-ec16eaa8d205",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Search a design",
              "fullTitle": "Designer Spec Search a design",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[data-cy='design-drawer']\").click();\ncy.get(\"#MUIDataTableBodyRow-patterns-0\", {\n  timeout: 30000\n});\ncy.wait(2000);\ncy.get(\"#MUIDataTableBodyRow-patterns-0\").click();\ncy.intercept(\"/api/pattern*\").as(\"patternSearch\");\ncy.get('[data-test-id=\"Search\"]').type(cypressModifiedDesignName);\ncy.wait(\"@patternSearch\");\ncy.get(\"#MUIDataTableBodyRow-patterns-0\").should(\"be.visible\").contains(cypressModifiedDesignName);",
              "err": {},
              "uuid": "b2f7ced1-b74d-42df-9d12-502d16bbe486",
              "parentUUID": "61266df9-a58e-42e7-a051-ec16eaa8d205",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Validate a design",
              "fullTitle": "Designer Spec Validate a design",
              "timedOut": null,
              "duration": 7556,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(_constants.cypressTestDesign.url);\ncy.intercept({\n  url: _constants.cytoConversion.url,\n  method: _constants.cytoConversion.method\n}).as(_constants.cytoConversion.alias);\ncy.wait(\"@extensionFileLoad\", {\n  timeout: 10000\n}); // wait for MeshMap UI\ncy.wait(_constants.cytoConversion.wait);\ncy.wait(_constants.TIME.XLARGE); // wait for rendering\ncy.get(\"#verify-design-btn\").click();\ncy.get('[data-cy=\"validate-btn-modal\"]').click();\ncy.contains(\"Validate\");\ncy.contains(\"OK\");",
              "err": {},
              "uuid": "da2544b8-453e-4c9c-8763-51591dd60f6e",
              "parentUUID": "61266df9-a58e-42e7-a051-ec16eaa8d205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deploy and Undeploy a design",
              "fullTitle": "Designer Spec Deploy and Undeploy a design",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[data-cy='design-drawer']\").click();\ncy.get(\"#MUIDataTableBodyRow-patterns-0\", {\n  timeout: 30000\n});\ncy.wait(2000);\ncy.get(\"#MUIDataTableBodyRow-patterns-0\").click();\ncy.get('[data-test-id=\"Search\"]').type(argoRolloutDesign);\ncy.intercept(\"/api/pattern*\").as(\"patternPost\");\ncy.wait(1500);\ncy.get(\"#MUIDataTableBodyRow-patterns-0\").should(\"be.visible\").contains(argoRolloutDesign);\ncy.wait(2000);\ncy.get(\"#MUIDataTableBodyRow-patterns-0\").click({\n  force: true\n}).wait(\"@patternPost\");\ncy.wait(2000); // rendering done up until this point\ncy.get(\"body\").then(body => {\n  if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n    cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"not.contain\", \"Unable to render\");\n  }\n}); // modal opens\ncy.get(\"#deploy-design-btn\").click();\ncy.get('[data-cy=\"deploy-btn-modal\"]').click();\ncy.intercept(\"/api/pattern/deploy*\").as(\"patternDeploy\");\ncy.get('[data-cy=\"deploy-btn-confirm\"]').click();\ncy.wait(\"@patternDeploy\").then(() => {\n  // cy.get(\"[data-cy='progress-snackbar']\").contains(\"Deploying design\");\n  cy.get(\"body\").then(body => {\n    if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n      cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"not.contain\", \"Failed\");\n    }\n  });\n}); //Undeploy \ncy.get('#undeploy-design-btn').click();\ncy.get('[data-cy=\"Undeploy-btn-modal\"]').click(); // modal opens\ncy.intercept(\"/api/pattern/deploy*\").as(\"patternUndeploy\");\ncy.get('[data-cy=\"deploy-btn-confirm\"]').click();\ncy.wait(\"@patternUndeploy\").then(() => {\n  // cy.get(\"[data-cy='progress-snackbar']\").contains(\"Deploying design\");\n  cy.get(\"body\").then(body => {\n    if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n      cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"not.contain\", \"Failed\");\n    }\n  });\n});",
              "err": {},
              "uuid": "99fedeca-f179-40ea-9598-6fab266cfa18",
              "parentUUID": "61266df9-a58e-42e7-a051-ec16eaa8d205",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [
            "2b02ef6e-78bd-4609-9eab-07774c5759f3",
            "da2544b8-453e-4c9c-8763-51591dd60f6e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [
            "b922f776-e136-424c-af59-fadbda1a4431",
            "b2f7ced1-b74d-42df-9d12-502d16bbe486",
            "99fedeca-f179-40ea-9598-6fab266cfa18"
          ],
          "duration": 15982,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8f989f08-934c-4c9f-a15f-3e1063eafa0c",
      "title": "",
      "fullFile": "cypress/e2e/e2e/filter_spec.js",
      "file": "cypress/e2e/e2e/filter_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b9e4587-502a-4541-a3ca-dab4d6b1dca3",
          "title": "Filter Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Render Filters",
              "fullTitle": "Filter Spec Render Filters",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// filters are not rendered on canvas for now\ncy.contains(\"Filters\");\ncy.get(\"#MUIDataTableBodyRow-filters-0\").should(\"be.visible\"); //convention: MUIDataTableBodyRow + type  + rowIndex\ncy.get(\"body\").then(body => {\n  if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n    cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"not.contain\", \"Error\");\n  }\n});",
              "err": {},
              "uuid": "e1bdbee7-19f4-45e1-998e-811c17ae255a",
              "parentUUID": "9b9e4587-502a-4541-a3ca-dab4d6b1dca3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Rename Filter",
              "fullTitle": "Filter Spec Rename Filter",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#design-name-textfield\").type(filterName);\ncy.intercept('/api/filter').as('filterSave');\ncy.wait(\"@filterSave\").then(() => {\n  // move to drawer and check for update\n  cy.get(\"[data-cy='filter-drawer']\").click();\n  cy.wait(5000); // wait for seconds, because the subscritions cannot be tracked for now\n  cy.get(\"#MUIDataTableBodyRow-filters-0 p\").contains(filterName);\n});",
              "err": {},
              "uuid": "9c7bd489-99e5-4594-ad60-ba182c31144b",
              "parentUUID": "9b9e4587-502a-4541-a3ca-dab4d6b1dca3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Search a filter",
              "fullTitle": "Filter Spec Search a filter",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"[data-cy='filter-drawer']\").click();\ncy.get('[data-test-id=\"Search\"]').type(filterName);\ncy.intercept(\"/api/filter*\").as(\"filterSearch\");\ncy.wait(\"@filterSearch\");\ncy.get(\"#MUIDataTableBodyRow-filters-0\").should(\"be.visible\").contains(filterName);",
              "err": {},
              "uuid": "cc17e829-14d3-4a54-9559-b50ff5d57ebf",
              "parentUUID": "9b9e4587-502a-4541-a3ca-dab4d6b1dca3",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "e1bdbee7-19f4-45e1-998e-811c17ae255a",
            "9c7bd489-99e5-4594-ad60-ba182c31144b",
            "cc17e829-14d3-4a54-9559-b50ff5d57ebf"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8cb2c18c-8f26-4ca0-8b1e-fb6ff47eed7c",
      "title": "",
      "fullFile": "cypress/e2e/e2e/machine_spec.js",
      "file": "cypress/e2e/e2e/machine_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8c964aff-fb39-43bf-9608-cd6d23141258",
          "title": "State Machine Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e0e3cd8c-a0e8-4cf6-8521-4111b89bb39f",
              "title": "State Machine Test",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "DO NOT allow merge of a design into itself",
                  "fullTitle": "State Machine Spec State Machine Test DO NOT allow merge of a design into itself",
                  "timedOut": null,
                  "duration": 6213,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('[data-cy=\"design-drawer\"]').click();\ncy.get(\"#MUIDataTableBodyRow-patterns-0\", {\n  timeout: 30000\n}).should(\"be.visible\");\ncy.wait(1000); // First design dropped on canvas\ncy.get(\"#MUIDataTableBodyRow-patterns-0\").click(); // Drop same design on canvas to test (do not merge) \ncy.wait(1000);\ncy.get(\"#MUIDataTableBodyRow-patterns-0[draggable='true']\").trigger(\"dragstart\");\ncy.get(\"body\").then(body => {\n  if (body.find(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").length > 0) {\n    cy.get(\"[aria-describedby='notistack-snackbar'] #notistack-snackbar\").should(\"contain\", \"Cannot merge a design into itself.\");\n  }\n});",
                  "err": {},
                  "uuid": "6ba1641c-dee0-4feb-b699-20b57c36f7c1",
                  "parentUUID": "e0e3cd8c-a0e8-4cf6-8521-4111b89bb39f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "DO save design every time a node is added or removed",
                  "fullTitle": "State Machine Spec State Machine Test DO save design every time a node is added or removed",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Check Save Operation on Additon of node  \n// A node is added on canvas    \ncy.get(\".component-drawer-svg-container[draggable='true']\").first().click().drag(\"#cy-canvas-container\", {\n  force: true\n});\ncy.wait(1000);\ncy.get('#design-name-textfield').click();\ncy.wait(\"@patternSave\"); // Check Save on deletion of node\ncy.get(\".component-drawer-svg-container[draggable='true']\").first().click().drag(\"#cy-canvas-container\", {\n  force: true\n}); // Perform delete action\ncy.wait(1000);\ncy.get(\"#component-delete\").click(); // Check Saving of the design\ncy.wait(\"@patternSave\");",
                  "err": {},
                  "uuid": "2c87289c-4663-42e3-85ee-3ed158a10679",
                  "parentUUID": "e0e3cd8c-a0e8-4cf6-8521-4111b89bb39f",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "DO save designs when all nodes are emptied on user request (reset canvas or all node deletes)",
                  "fullTitle": "State Machine Spec State Machine Test DO save designs when all nodes are emptied on user request (reset canvas or all node deletes)",
                  "timedOut": null,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Drop a node on canvas\ncy.get(\".component-drawer-svg-container[draggable='true']\").first().click().drag(\"#cy-canvas-container\", {\n  force: true\n}); // visit designer drawer to close schema\ncy.wait(2000);\ncy.get(\"[data-cy='design-drawer']\").click(); // Reset canvas by clear/delete all nodes\ncy.get('[data-cy=\"reset-btn\"]').click({\n  force: true\n}); // Check Saving the design\ncy.wait(\"@patternSave\");",
                  "err": {},
                  "uuid": "159f4db9-00fc-4d1d-ab2d-dcd628355e7b",
                  "parentUUID": "e0e3cd8c-a0e8-4cf6-8521-4111b89bb39f",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [
                "6ba1641c-dee0-4feb-b699-20b57c36f7c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [
                "2c87289c-4663-42e3-85ee-3ed158a10679",
                "159f4db9-00fc-4d1d-ab2d-dcd628355e7b"
              ],
              "duration": 6213,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9a49f495-6f4a-4fa0-bcc7-b01905e3212a",
      "title": "",
      "fullFile": "cypress/e2e/e2e/v2.design_spec.js",
      "file": "cypress/e2e/e2e/v2.design_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ef22dcc2-c01b-4572-a389-13b826381a84",
          "title": "Canvas Double Click Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "add element on canvas with double click",
              "fullTitle": "Canvas Double Click Test add element on canvas with double click",
              "timedOut": null,
              "duration": 6582,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// double click on the center of the canvas to popup the dialog\ncy.get(_constants.canvasLayer0.query).as(_constants.canvasLayer0.alias);\ncy.get((0, _helpers.waitFor)(_constants.canvasLayer0.alias)).dblclick('center', {\n  force: true,\n  multiple: true\n}); // the popup wizard should exist\ncy.get('[data-cy=\"canvas-component-menu\"]').should(\"exist\"); // get the first category from list and click on it\ncy.get('[data-cy=\"canvas-component-menu\"]').find('[data-cy=\"category-menu\"]').children().first().click();\ncy.intercept({\n  url: _constants.designEndpoint.path,\n  method: \"POST\"\n}).as(_constants.designEndpoint.alias); // create an interception alias for POST Method\ncy.get('[data-cy=\"canvas-component-menu\"]').find('[data-cy=\"model-table\"]').children().should(\"have.length.above\", 0) // check for model length > 0\n.first().click() // select the first Model\n.wait(_constants.TIME.MEDIUM) // wait for ajax\n.find('[data-cy=\"component-table-body\"]').children().first() // get the first model selected\n.children().eq(1) // get the node svg selected\n.click(); // click to add the node on canvas\nlet designId = null;\ncy.wait(_constants.designEndpoint.wait) // .its(\"request\").should(\"include\", \"cytoscape_json\").should(\"include\", \"name\").its(\"response\").should(\"include\", \"id\")\n.then(interceptionObj => {\n  var _response$body$;\n  console.log(\"result of endpoint\", interceptionObj);\n  const reqBody = interceptionObj.request.body;\n  expect(reqBody).to.have.ownProperty(\"cytoscape_json\");\n  expect(reqBody).to.have.ownProperty(\"name\");\n  expect(reqBody).to.have.include({\n    save: true\n  });\n  const response = interceptionObj.response;\n  expect(response).to.include({\n    statusCode: 200\n  });\n  expect(response.body).to.be.an(\"array\"); // response body structure should be array\n  designId = (_response$body$ = response.body[0]) === null || _response$body$ === void 0 ? void 0 : _response$body$.id; // do cleanup by deleting the design\n  cy.deleteDesign(designId);\n}); // ensuring on the click event the design endpoint is called\ncy.window().its(\"cyto\").should(\"exist\"); // there should be a global cytoscape property exposed\ncy.window().then(window => {\n  // assert whether the canvas object has now 1 element due to click operation\n  cy.wait(_constants.TIME.SMALL);\n  const cyto = window.cyto;\n  cy.wrap(cyto.nodes().length).should(\"equal\", 1);\n});",
              "err": {},
              "uuid": "b44741e4-4b26-42d4-9780-df8aaacbb840",
              "parentUUID": "ef22dcc2-c01b-4572-a389-13b826381a84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b44741e4-4b26-42d4-9780-df8aaacbb840"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6582,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "12539e49-3d12-4447-a030-e0628c5d7377",
      "title": "",
      "fullFile": "cypress/e2e/e2e/v2.hierarchy_relationship_spec.js",
      "file": "cypress/e2e/e2e/v2.hierarchy_relationship_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b2e02ace-578a-4628-aac3-8942ff2ce662",
          "title": "Hierarchy relationship Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[RJSF] should change the namespace value when dragged inside it",
              "fullTitle": "Hierarchy relationship Test [RJSF] should change the namespace value when dragged inside it",
              "timedOut": null,
              "duration": 10318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(_constants.TIME.XLARGE);\ncy.window().then(window => {\n  const cyto = window.cyto;\n  const nsNode = cyto.nodes('[type=\"Namespace\"]')[0];\n  const podNode = cyto.nodes('[type=\"Pod\"]')[0];\n  console.log(\"see this...\", {\n    cyto,\n    nsNode,\n    podNode\n  });\n  podNode.move({\n    parent: nsNode.data(\"id\")\n  });\n  podNode.emit(\"tap\");\n  cy.wait(_constants.TIME.XXLARGE);\n  cy.get(\"#root_namespace\").invoke(\"val\").should(\"contain\", nsNode.data(\"label\"));\n});",
              "err": {},
              "uuid": "612f2bcb-4159-478a-ad5f-4704086f8ce2",
              "parentUUID": "b2e02ace-578a-4628-aac3-8942ff2ce662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[RJSF] should change the namespace value when dragged out from Namespace",
              "fullTitle": "Hierarchy relationship Test [RJSF] should change the namespace value when dragged out from Namespace",
              "timedOut": null,
              "duration": 10055,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(_constants.TIME.XLARGE);\ncy.window().then(window => {\n  const cyto = window.cyto; // const nsNode = cyto.nodes('[type=\"Namespace\"]')[0]\n  const podNode = cyto.nodes('[type=\"Pod\"]')[0]; // move pod out of the namespace\n  podNode.move({\n    parent: null\n  });\n  podNode.emit(\"tap\");\n  cy.wait(_constants.TIME.XXLARGE);\n  cy.get(\"#root_namespace\").invoke(\"val\").should(\"contain\", \"default\"); // \"default\" is the default namespace value\n});",
              "err": {},
              "uuid": "74701de6-9298-4538-a069-3943c1da3122",
              "parentUUID": "b2e02ace-578a-4628-aac3-8942ff2ce662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Cytoscape] should change the namespace value when dragged inside it",
              "fullTitle": "Hierarchy relationship Test [Cytoscape] should change the namespace value when dragged inside it",
              "timedOut": null,
              "duration": 6648,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(_constants.TIME.XLARGE);\ncy.window().then(window => {\n  const cyto = window.cyto;\n  const nsNode = cyto.nodes('[type=\"Namespace\"]')[0];\n  const podNode = cyto.nodes('[type=\"Pod\"]')[0];\n  podNode.move({\n    parent: nsNode.data(\"id\")\n  });\n  cy.intercept(_constants.designEndpoint.path).as(_constants.designEndpoint.alias);\n  nsNode.emit(\"tap\");\n  cy.wait(_constants.designEndpoint.wait, {\n    timeout: _constants.TIME.XXLARGE\n  }).then(interceptionObj => {\n    // console.log(\"result of endpoint\", interceptionObj)\n    const reqBody = interceptionObj.request.body;\n    expect(reqBody).to.have.ownProperty(\"cytoscape_json\");\n    const cyJson = JSON.parse(reqBody.cytoscape_json);\n    const podValue = cyJson.elements.find(element => element.scratch._data.type === \"Pod\");\n    expect(podValue.scratch._data.namespace).to.equal(nsNode.data(\"label\"));\n  });\n});",
              "err": {},
              "uuid": "c5d11b37-156e-4c5e-a4d3-c56612357ab6",
              "parentUUID": "b2e02ace-578a-4628-aac3-8942ff2ce662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[Cytoscape] should change the namespace value when dragged out from Namespace",
              "fullTitle": "Hierarchy relationship Test [Cytoscape] should change the namespace value when dragged out from Namespace",
              "timedOut": null,
              "duration": 6149,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(_constants.TIME.XLARGE);\ncy.window().then(window => {\n  const cyto = window.cyto;\n  const nsNode = cyto.nodes('[type=\"Namespace\"]')[0];\n  const podNode = cyto.nodes('[type=\"Pod\"]')[0];\n  podNode.move({\n    parent: null\n  });\n  cy.intercept(_constants.designEndpoint.path).as(_constants.designEndpoint.alias);\n  nsNode.emit(\"tap\");\n  cy.wait(_constants.designEndpoint.wait, {\n    timeout: _constants.TIME.XXLARGE\n  }).then(interceptionObj => {\n    console.log(\"result of endpoint\", interceptionObj);\n    const reqBody = interceptionObj.request.body;\n    expect(reqBody).to.have.ownProperty(\"cytoscape_json\");\n    const cyJson = JSON.parse(reqBody.cytoscape_json);\n    const podValue = cyJson.elements.find(element => element.scratch._data.type === \"Pod\");\n    expect(podValue.scratch._data.namespace).to.equal(\"default\");\n  });\n});",
              "err": {},
              "uuid": "18666662-9451-45fc-b48e-111963e996af",
              "parentUUID": "b2e02ace-578a-4628-aac3-8942ff2ce662",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "612f2bcb-4159-478a-ad5f-4704086f8ce2",
            "74701de6-9298-4538-a069-3943c1da3122",
            "c5d11b37-156e-4c5e-a4d3-c56612357ab6",
            "18666662-9451-45fc-b48e-111963e996af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33170,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "74c00b9f-c749-4747-82d5-fa7baf40dfe8",
      "title": "",
      "fullFile": "cypress/e2e/e2e/plugin_test/visualizer_spec.js",
      "file": "cypress/e2e/e2e/plugin_test/visualizer_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0166b915-e53d-4bae-9fb1-87ad9568d154",
          "title": "Visualizer Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visit MeshMap Visualizer, check gql status",
              "fullTitle": "Visualizer Spec Visit MeshMap Visualizer, check gql status",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.setMode(_constants.VISUALIZER);\ncy.visit(\"/extension/meshmap\");\ncy.intercept(\"/api/provider/extension*\").as(\"extensionFileLoad\");\ncy.wait(\"@extensionFileLoad\");\ncy.get(\"body\").then(body => {\n  if (body.find('[data-cy=\"modal-close-btn\"]').length > 0) {\n    cy.get('[data-cy=\"modal-close-btn\"]').click();\n  }\n});\ncy.contains(\"MeshMap\");\ncy.wait(1500);\ncy.get(\"body\").then(body => {\n  if (body.find(`[data-cy=\"modal-close-btn\"]`).length > 0) {\n    // ensures the message of graphQL error, if any\n    cy.get('[data-cy=\"modal-close-btn\"]').click();\n  }\n}); //tabs\ncy.contains(\"Details\");\ncy.contains(\"Metrics\");\ncy.contains(\"Actions\");\ncy.get(\"body\").should(\"not.contain\", \"Uh-oh!\");",
              "err": {},
              "uuid": "854dc6f6-3297-432a-b2f0-1da6138aef23",
              "parentUUID": "0166b915-e53d-4bae-9fb1-87ad9568d154",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "854dc6f6-3297-432a-b2f0-1da6138aef23"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
